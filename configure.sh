#!/bin/bash
# Please run this script to configure the repository after cloning it.

# When configuring with private repository, the following override hierarchy is used:
# - commandline parameters - most specific, always wins.
# - stdin parameters.
# - saved repository - least specific, if present.
# - fallback to opensource mode.

# Stop on the first error.
set -e -u

BASE_PATH=$(cd "$(dirname "$0")"; pwd)
PRIVATE_HEADER="$BASE_PATH/private.h"
DEFAULT_PRIVATE_HEADER="$BASE_PATH/private_default.h"

usage() {
  echo "This tool configures omaps repository"
  echo ""
  echo "./configure.sh [path-to-private-repo]"
}

setup_opensource() {
  echo "Initializing repository with default values in Open-Source mode."
  cp -p $DEFAULT_PRIVATE_HEADER $PRIVATE_HEADER
}

setup_private() {
  echo "Setting up private configuration from '$PRIVATE_REPO'"
  if [ ! -f "$PRIVATE_REPO/private.h" ]; then
    echo "Can find $PRIVATE_REPO/private.h configuration" >&2
    exit 1
  fi
  cp -pRv $PRIVATE_REPO/* .
  echo "Private files have been updated."
}

if [ "${1-}" = "-h" -o "${1-}" = "--help" ]; then
  usage
  exit 1
fi

PRIVATE_REPO=${1-}

if [ -n "$PRIVATE_REPO" ]; then
  setup_private
else
  setup_opensource
fi

# TODO: Remove these lines when XCode project is finally generated by CMake. 
if [ ! -d "$BASE_PATH/3party/boost/" ]; then
  echo "You need to have boost submodule present to run bootstrap.sh"
  echo "Try 'git submodule update --init --recursive'"
  exit 1
fi
if [ ! -d "$BASE_PATH/3party/boost/tools" ]; then
  echo "Boost's submodule tools is not present, but required for bootstrap"
  echo "Try 'git submodule update --init --recursive'"
  exit 1
fi
cd $BASE_PATH/3party/boost/
./bootstrap.sh
./b2 headers
cd $BASE_PATH
